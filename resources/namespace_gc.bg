namespace test.gc.in.namespaces

import "raw_mutable_array" as array

struct HeapThing {
    x
    y
    z
}

struct PersistentVector {
    count
    shift
    root
    tail
}

let EMPTY = PersistentVector {
    count: 0
    shift: 5
    root: array/new_array(0)
    tail: array/new_array(0)
}


let global_thing = HeapThing { x: 1, y: 2, z: 3 }
let global_thing2 = HeapThing { x: global_thing, y: global_thing, z: global_thing }

fn main() {
    println(EMPTY)
    gc()
    gc()
    let local_thing = HeapThing { x: 4, y: 5, z: 6 }
    gc()
    println(global_thing)
    println(global_thing2)
    println(EMPTY)
    "done"
}

// Expe0ct
// PersistentVector { count: 0, shift: 5, root: [  ], tail: [  ] }
// HeapThing { x: 1, y: 2, z: 3 }
// HeapThing { x: HeapThing { x: 1, y: 2, z: 3 }, y: HeapThing { x: 1, y: 2, z: 3 }, z: HeapThing { x: 1, y: 2, z: 3 } }
// PersistentVector { count: 0, shift: 5, root: [  ], tail: [  ] }
// done