namespace map_benchmark

import "persistent_map" as pm
import "beagle.builtin" as builtin
import "beagle.primitive" as primitive

fn insert_many(m, i, limit) {
    if i == limit {
        m
    } else {
        insert_many(pm/assoc(m, i, i), i + 1, limit)
    }
}

fn do_gets(m, i, limit) {
    if i == limit {
        0
    } else {
        let result = pm/get(m, i)
        do_gets(m, i + 1, limit)
    }
}

fn main() {
    let size = 100000
    let empty_map = pm/map()
    let big_map = insert_many(empty_map, 0, size)
    do_gets(big_map, 0, size)
    "done"
}