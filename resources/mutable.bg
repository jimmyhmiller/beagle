namespace mutable

import "beagle.primitive" as primitive

struct Tokenizer {
    input
    position
}

fn consume(tokenizer) {
    // TODO: I don't like that this is primitive here
    primitive/set!(tokenizer.position, tokenizer.position + 1)
}

fn main() {
    let tokenizer = Tokenizer {
        input: "{ \"key\": \"value\" }",
        position: 0
    }

    println(tokenizer.input[tokenizer.position])
    consume(tokenizer)
    print("<")
    print(tokenizer.input[tokenizer.position])
    println(">")
    consume(tokenizer)
    println(tokenizer.input[tokenizer.position])
    println(length(tokenizer.input))
    "done"

}

// Expect
// {
// < >
// "
// 18
// done